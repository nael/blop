#lang racket

(require "assets.rkt" "math.rkt")

(define (register-static n p)
  (register-image n 0 0 (list p)))
(define BOB (list "1.png" "2.png" "3.png" "4.png" "5.png" "6.png" "7.png" "8.png" "9.png"))
(define bb (list "ass/1.png"))
(register-image 'fx/bob-walk-left 'begin 'end (map ((curry string-append) "ass/") BOB) #:offset (vec -200 -100) #:scale 0.4)
(register-image 'fx/bob-walk-right 0 9 'fx/bob-walk-left #:x-flip? #t)
(register-image 'fx/bob-still 0 0 'fx/bob-walk-left)
(register-image 'fx/bob-still-left 0 0 'fx/bob-walk-left)
(register-image 'fx/bob-still-right 0 0 'fx/bob-walk-left #:x-flip? #t)
(register-image 'fx/ch1/well-dm 'begin 'end (list "ass/well_dm.bmp"))

(register-static 'fx/ch1/well/bg "ass/well/bg.png")
(register-static 'fx/ch1/well/horiz "ass/well/1.png")
(register-static 'fx/ch1/well/maisons "ass/well/2.png")
(register-static 'fx/ch1/well/canap "ass/well/3.png")
(register-static 'fx/ch1/well/canap-cm "ass/well/3_cm.png")
(register-static 'fx/ch1/well/serre "ass/well/4.png")
(register-static 'fx/ch1/well/serre-cm "ass/well/4_cm.png")
(register-static 'fx/ch1/well/ferme "ass/well/5.png")
(register-static 'fx/ch1/well/ferme-cm "ass/well/5_cm.png")
(register-static 'fx/ch1/well/coffre "ass/well/6.png")
(register-static 'fx/ch1/well/coffre-ouvert "ass/well/7.png")
(register-static 'fx/ch1/well/wellwell-cm "ass/well/8_cm.png")
(register-static 'fx/ch1/well/wellwell "ass/well/8.png")
(register-static 'fx/ch1/well/cloture "ass/well/9.png")
(register-static 'pixel "ass/sq.bmp")
;(register-image 'fx/bob-still 'begin 'end (map ((curry string-append) "ass/") BOB))
;(register-image 'fx/bob-walk-left 0 0 bb)
;(register-image 'fx/bob-well-background 0 0 bb)

;(register-image 'fx/banana (map ((curry string-append) "ass/")BANANA))
;(register-image 'fx/boobs (map ((curry string-append) "ass/")BOOBS))
